apiVersion: security.nirmata.io/v1alpha1
kind: EnterpriseKyverno
metadata:
  name: enterprisekyverno-sample
spec:
  # Default values copied from <project_dir>/helm-charts/kyverno/values.yaml
  antiAffinity:
    enable: true
  config:
    annotations: {}
    excludeGroupRole: null
    excludeUsername: null
    existingConfig: ""
    generateSuccessEvents: false
    metricsConfig:
      annotations: {}
      namespaces:
        exclude: []
        include: []
    resourceFilters:
    - '[Event,*,*]'
    - '[*,kube-system,*]'
    - '[*,kube-public,*]'
    - '[*,kube-node-lease,*]'
    - '[Node,*,*]'
    - '[APIService,*,*]'
    - '[TokenReview,*,*]'
    - '[SubjectAccessReview,*,*]'
    - '[SelfSubjectAccessReview,*,*]'
    - '[Binding,*,*]'
    - '[ReplicaSet,*,*]'
    - '[AdmissionReport,*,*]'
    - '[ClusterAdmissionReport,*,*]'
    - '[BackgroundScanReport,*,*]'
    - '[ClusterBackgroundScanReport,*,*]'
    - '[ClusterRole,*,{{ template "kyverno.fullname" . }}:*]'
    - '[ClusterRoleBinding,*,{{ template "kyverno.fullname" . }}:*]'
    - '[ServiceAccount,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceAccountName"
      . }}]'
    - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.configMapName"
      . }}]'
    - '[ConfigMap,{{ include "kyverno.namespace" . }},{{ template "kyverno.metricsConfigMapName"
      . }}]'
    - '[Deployment,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
      . }}]'
    - '[Job,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-hook-pre-delete]'
    - '[NetworkPolicy,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
      . }}]'
    - '[PodDisruptionBudget,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
      . }}]'
    - '[Role,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}:*]'
    - '[RoleBinding,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname"
      . }}:*]'
    - '[Secret,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
      . }}.{{ template "kyverno.namespace" . }}.svc.*]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
      . }}]'
    - '[Service,{{ include "kyverno.namespace" . }},{{ template "kyverno.serviceName"
      . }}-metrics]'
    - '[ServiceMonitor,{{ if .Values.serviceMonitor.namespace }}{{ .Values.serviceMonitor.namespace
      }}{{ else }}{{ template "kyverno.namespace" . }}{{ end }},{{ template "kyverno.serviceName"
      . }}-service-monitor]'
    - '[Pod,{{ include "kyverno.namespace" . }},{{ template "kyverno.fullname" . }}-test]'
    webhooks: null
  createSelfSignedCert: false
  customLabels: {}
  dnsPolicy: ClusterFirst
  envVars: {}
  envVarsInit: {}
  excludeKyvernoNamespace: true
  extraArgs:
  - --autogenInternals=true
  - --loggingFormat=text
  extraContainers: []
  extraEnvVars: null
  extraInitContainers: []
  fullnameOverride: null
  generatecontrollerExtraResources: []
  hostNetwork: false
  image:
    pullPolicy: IfNotPresent
    pullSecrets:
      create: false
      name: image-pull-secret
      password: null
      registry: ghcr.io
      username: null
    repository: ghcr.io/nirmata/kyverno
    tag: v1.8.1-n4kbuild.1
  imagePullSecret:
    create: false
    name: kyverno-operator-image-pull-secret
    password: null
    registry: ghcr.io
    username: null
  imagePullSecrets: {}
  initContainer:
    extraArgs:
    - --loggingFormat=text
  initImage:
    pullPolicy: null
    repository: ghcr.io/nirmata/kyvernopre
    tag: v1.8.1-n4kbuild.1
  initResources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  installCRDs: true
  kyvernoOperatorImage: ghcr.io/nirmata/nirmata-kyverno-monitor
  kyvernoOperatorImageTag: 0.1.0
  livenessProbe:
    failureThreshold: 2
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 15
    periodSeconds: 30
    successThreshold: 1
    timeoutSeconds: 5
  metricsService:
    annotations: {}
    create: true
    nodePort: null
    port: 8000
    type: ClusterIP
  nameOverride: null
  namespace: null
  networkPolicy:
    enabled: false
    ingressFrom: []
  nodeAffinity: {}
  nodeSelector: {}
  podAffinity: {}
  podAnnotations: {}
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - podAffinityTerm:
        labelSelector:
          matchExpressions:
          - key: app.kubernetes.io/name
            operator: In
            values:
            - kyverno
        topologyKey: kubernetes.io/hostname
      weight: 1
  podDisruptionBudget:
    maxUnavailable: null
    minAvailable: 1
  podLabels: {}
  podSecurityContext: {}
  priorityClassName: ""
  rbac:
    create: true
    serviceAccount:
      annotations: {}
      create: true
      name: null
  readinessProbe:
    failureThreshold: 6
    httpGet:
      path: /health/readiness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 5
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 5
  replicaCount: null
  resourceFiltersExcludeNamespaces: []
  resources:
    limits:
      memory: 384Mi
    requests:
      cpu: 100m
      memory: 128Mi
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  service:
    annotations: {}
    nodePort: null
    port: 443
    type: ClusterIP
  serviceMonitor:
    additionalLabels: null
    enabled: false
    interval: 30s
    namespace: null
    scrapeTimeout: 25s
    secure: false
    tlsConfig: {}
  startupProbe:
    failureThreshold: 12
    httpGet:
      path: /health/liveness
      port: 9443
      scheme: HTTPS
    initialDelaySeconds: 30
    periodSeconds: 10
  testImage:
    pullPolicy: null
    registry: null
    repository: busybox
    tag: null
  testResources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 10m
      memory: 64Mi
  testSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    privileged: false
    readOnlyRootFilesystem: true
    runAsGroup: 65534
    runAsNonRoot: true
    runAsUser: 65534
    seccompProfile:
      type: RuntimeDefault
  tolerations: []
  topologySpreadConstraints: []
  tufRootMountPath: /.sigstore
  updateStrategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 40%
    type: RollingUpdate
  validKyvernoImages: ghcr.io/nirmata/kyverno:xxx|ghcr.io/nirmata/kyverno/kyverno:xxx|ghcr.io/kyverno/kyverno:xxx
  webhookEnabled: false
  webhooksCleanup:
    enable: false
    image: bitnami/kubectl:latest
  
  
