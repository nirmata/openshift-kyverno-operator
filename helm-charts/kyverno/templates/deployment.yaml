apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "kyverno.fullname" . }}
  labels: {{ include "kyverno.labels" . | nindent 4 }}
    app: kyverno
  namespace: {{ template "kyverno.namespace" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{ include "kyverno.matchLabels" . | nindent 6 }}
  {{- if .Values.updateStrategy }}
  strategy:
    {{ toYaml .Values.updateStrategy | nindent 4 | trim }}
  {{- end }}
  template:
    metadata:
      labels: {{ include "kyverno.labels" . | nindent 8 }}
        app: kyverno
        {{- range $key, $value := .Values.podLabels }}
        {{ $key }}: {{ $value }}
        {{- end }}
      {{- with .Values.podAnnotations }}
      annotations: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
    spec:
      imagePullSecrets: 
      - name: {{ .Values.image.pullSecrets.name }}
      {{- with .Values.podSecurityContext }}
      securityContext: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- if or .Values.antiAffinity.enable .Values.podAffinity .Values.nodeAffinity }}
      affinity:
        {{- if and .Values.antiAffinity.enable .Values.podAntiAffinity }}
        podAntiAffinity:
          {{- toYaml .Values.podAntiAffinity | nindent 10 }}
        {{- end }}
        {{- if .Values.podAffinity }}
        podAffinity:
          {{- toYaml .Values.podAffinity | nindent 10 }}
        {{- end }}
        {{- if .Values.nodeAffinity }}
        nodeAffinity:
          {{- toYaml .Values.nodeAffinity | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      {{- with .Values.topologySpreadConstraints }}
      topologySpreadConstraints: {{ tpl (toYaml .) $ | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "kyverno.serviceAccountName" . }}
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.hostNetwork }}
      hostNetwork: {{ .Values.hostNetwork }}
      {{- end }}
      {{- if .Values.dnsPolicy }}
      dnsPolicy: {{ .Values.dnsPolicy }}
      {{- end }}
      initContainers:
      {{- if .Values.extraInitContainers }}
        {{- toYaml .Values.extraInitContainers | nindent 8 }}
      {{- end }}
        - name: kyverno-pre
          image: {{ .Values.initImage.repository }}:{{ default .Chart.AppVersion (default .Values.image.tag .Values.initImage.tag) }}
          imagePullPolicy: {{ default .Values.image.pullPolicy .Values.initImage.pullPolicy }}
          {{- if .Values.initContainer.extraArgs }}
          args:
              {{ tpl (toYaml .Values.initContainer.extraArgs) . }}
          {{- end }}
          {{- with .Values.initResources }}
          resources: {{ tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext: {{ include "kyverno.securityContext" . | nindent 12 }}
          {{- end }}
          env:
          - name: METRICS_CONFIG
            value: {{ template "kyverno.metricsConfigMapName" . }}
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KYVERNO_DEPLOYMENT
            value: {{ template "kyverno.fullname" . }}
          {{- with .Values.envVarsInit }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
      containers:
      {{- if .Values.extraContainers }}
        {{- toYaml .Values.extraContainers | nindent 8 }}
      {{- end }}
        - name: kyverno
          image: {{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          {{- if or .Values.extraArgs .Values.imagePullSecrets }}
          args:
            {{- if .Values.extraArgs -}}
              {{ tpl (toYaml .Values.extraArgs) . | nindent 12 }}
            {{- end }}
            {{- if .Values.imagePullSecrets }}
            - --imagePullSecrets={{ keys .Values.imagePullSecrets | join "," }}
            {{- end }}
          {{- end }}
          {{- with .Values.resources }}
          resources: {{ tpl (toYaml .) $ | nindent 12 }}
          {{- end }}
          {{- if .Values.securityContext }}
          securityContext: {{ include "kyverno.securityContext" . | nindent 12 }}
          {{- end }}
          ports:
          - containerPort: 9443
            name: https
            protocol: TCP
          - containerPort: 8000
            name: metrics-port
            protocol: TCP
          env:
          - name: INIT_CONFIG
            value: {{ template "kyverno.configMapName" . }}
          - name: METRICS_CONFIG
            value: {{ template "kyverno.metricsConfigMapName" . }}
          - name: KYVERNO_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: KYVERNO_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: KYVERNO_SERVICEACCOUNT_NAME
            value: {{ template "kyverno.serviceAccountName" . }}
          - name: KYVERNO_SVC
            value: {{ template "kyverno.serviceName" . }}
          - name: TUF_ROOT
            value: {{ .Values.tufRootMountPath }}
          {{- with .Values.envVars }}
          {{- toYaml . | nindent 10 }}
          {{- end }}
          - name: KYVERNO_DEPLOYMENT
            value: {{ template "kyverno.fullname" . }}
        {{- with .Values.startupProbe }}
          startupProbe: {{ tpl (toYaml .) $ | nindent 12 }}
        {{- end }}
        {{- with .Values.livenessProbe }}
          livenessProbe: {{ tpl (toYaml .) $ | nindent 12 }}
        {{- end }}
        {{- with .Values.readinessProbe }}
          readinessProbe: {{ tpl (toYaml .) $ | nindent 12 }}
        {{- end }}
          volumeMounts:
            - mountPath: {{ .Values.tufRootMountPath }}
              name: sigstore
      volumes:
      - name: sigstore
        emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: manager
    app.kubernetes.io/created-by: kyverno-operator
    app.kubernetes.io/instance: controller-manager
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: deployment
    app.kubernetes.io/part-of: kyverno-operator
    control-plane: controller-manager
  name: kyverno-operator
  namespace: {{ include "kyvernoMonitorNamespace" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kyverno-operator
      app.kubernetes.io/instance: kyverno-operator
      app.kubernetes.io/name: kyverno-operator
      control-plane: controller-manager
      nirmata.io/container.type: system
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        app: kyverno-operator
        app.kubernetes.io/instance: kyverno-operator
        app.kubernetes.io/name: kyverno-operator
        control-plane: controller-manager
        nirmata.io/container.type: system
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/arch
                operator: In
                values:
                - amd64
                - arm64
                - ppc64le
                - s390x
              - key: kubernetes.io/os
                operator: In
                values:
                - linux
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        image: ghcr.io/nirmata/kube-rbac-proxy:v0.13.1
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 15
          periodSeconds: 600
          successThreshold: 1
          tcpSocket:
            port: 8443
          timeoutSeconds: 5
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 600
          successThreshold: 1
          tcpSocket:
            port: 8443
          timeoutSeconds: 5
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            - CAP_NET_RAW
          readOnlyRootFilesystem: true
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --zap-devel
        - --zap-log-level=10
        env:
        - name: POD_NAMESPACE
          value: {{ include "kyvernoMonitorNamespace" . }}
        {{- range .Values.extraEnvVars }}
        - name: {{ .name }}
          value: {{ .value }}
        {{- end }}
        command:
        - /manager
        image: {{ .Values.kyvernoOperatorImage }}:{{ default .Chart.AppVersion .Values.kyvernoOperatorImageTag }}
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
            - CAP_NET_RAW
        {{- if .Values.webhookEnabled }}
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: cert
          readOnly: true
        {{- end }}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: kyverno-operator
      terminationGracePeriodSeconds: 10
      {{- if .Values.webhookEnabled }}
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: webhook-server-cert
      {{- end }}
